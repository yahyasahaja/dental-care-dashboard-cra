{"version":3,"sources":["services/stores/overlayLoading.js","services/stores/snackbar.js","services/stores/user.js","services/stores/token.js","services/stores/floatingButton.js","services/stores/index.js","config.js","App.module.scss","screens/Loading/index.js","App.js","serviceWorker.js","index.js","services/stores/doctor.js"],"names":["OverlayLoading","observable","action","_this","isActive","_this2","_this3","window","overlay","snackbar","active","label","type","timeout","state","data","Object","objectSpread","User","email","password","this","isLoadingLogin","axios","post","access_token","refresh_token","token","setAccessToken","setRefreshToken","getUser","console","log","_context","t0","isLoading","get","show","_context2","isFetchingUsers","_context3","computed","user","Token","isSettingUp","localStorage","getItem","ACCESS_TOKEN_STORAGE_URI","userData","refresh","REFRESH_TOKEN_STORAGE_URI","rawAccessToken","defaults","headers","bearerAccessToken","setItem","refreshToken","concat","floatingButton","onClick","__webpack_require__","d","__webpack_exports__","stores_token","overlayLoading","doctor","BASE_URL","module","exports","container","shadow","loading","add","fab","index","react_default","a","createElement","className","styles","Component","Login","React","lazy","Promise","all","e","then","bind","Dashboard","baseURL","App","observer","setup","loading2","CircularProgress_default","style","color","react","fallback","Loading_index","BrowserRouter","Switch","Route","path","render","props","Redirect","from","to","index_es","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","onClose","hide","data-cy","IconButton_default","key","aria-label","closeSnackbar","Close_default","Fab_default","display","Add_default","renderOverlayLoading","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","MUITheme","createMuiTheme","palette","primary","lightBlue","secondary","red","typography","useNextVariants","theme","src_App","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","Doctor","isFetchingDoctors","doctors","id","isFetchingDoctor","isFetchingSchedule","schedule","isAddingSchedule","_context4","doctorId","scheduleId","isDeletingSchedule","delete","_context5","name","url"],"mappings":"4PAIMA,2NACHC,8EACU,iDAEVC,yFACgB,WACfC,EAAKC,UAAYD,EAAKC,+CAGvBF,yFACM,WACLG,EAAKD,UAAW,wCAGjBF,yFACM,WACLI,EAAKF,UAAW,SAILG,SAAOC,QAAU,IAAIR,WCcrBS,EAAA,0KAjCZR,6EACM,CACLS,QAAQ,EACRR,OAAQ,UACRS,MAAO,yBACPC,KAAM,SACNC,QAAS,0CAGVX,yFACM,SAACS,EAAOT,EAAQU,EAAMC,GAC3B,IAAIC,EAAQX,EAAKY,KAEjBZ,EAAKY,KAAOd,YAAW,CACrBS,QAAQ,EACRR,OAAQA,GAAUY,EAAMZ,OACxBS,MAAOA,GAASG,EAAMH,MACtBC,KAAMA,GAAQE,EAAMF,KACpBC,QAASA,GAAWC,EAAMD,gDAI7BX,yFACM,WACL,IAAIY,EAAQT,EAAKU,KAEjBV,EAAKU,KAAOd,YAAWe,OAAAC,EAAA,EAAAD,CAAA,GAClBF,EADiB,CAEpBJ,QAAQ,qEC5BRQ,qSAYQC,EAAOC,+FAEfC,KAAKC,gBAAiB,WAOZC,IAAMC,KAAK,aAAc,CACjCL,QAAOC,wCALPL,KACEU,iBACAC,kBAMJC,EAAMC,eAAeH,GACrBE,EAAME,gBAAgBH,aAChBL,KAAKS,yBACXT,KAAKC,gBAAiB,oBAEfG,qCAEPJ,KAAKC,gBAAiB,EACtBS,QAAQC,IAAI,oBAAZC,EAAAC,qRAOAb,KAAKc,WAAY,WACIZ,IAAMa,IAAI,qCAAzBrB,SACNM,KAAKN,KAAOA,EACZM,KAAKc,WAAY,EACjBJ,QAAQC,IAAIjB,qBACLA,qCAEPM,KAAKc,WAAY,EACjB1B,EAAS4B,KAAK,uBACdN,QAAQC,IAAI,6BAAZM,EAAAJ,mRAOAb,KAAKkB,iBAAkB,WACQhB,IAAMa,IAAI,qCAA3BrB,IAARA,KAAQA,KACdM,KAAKkB,iBAAkB,EACvBR,QAAQC,IAAIjB,qBACLA,qCAEPM,KAAKkB,iBAAkB,EACvB9B,EAAS4B,KAAK,uBACdN,QAAQC,IAAI,6BAAZQ,EAAAN,mJAxDF,QAASb,KAAKN,gDAPfd,8EAAkB,+CAClBA,8EAAuB,kDACvBA,8EAA6B,iDAC7BA,8EAA4B,2CAE5BwC,6GAKAvC,0GA0BAA,6GAgBAA,6EAgBYK,SAAOmC,KAAO,IAAIxB,ECrE3ByB,2VAYFtB,KAAKuB,aAAc,EAEfnB,EAAeoB,aAAaC,QAAQC,8CACd1B,KAAKuB,aAAc,iBAC7CvB,KAAKO,eAAeH,YAGCiB,EAAKZ,sBAAtBkB,kCAEF3B,KAAKuB,aAAc,oBACZI,kBAILC,EAAUJ,aAAaC,QAAQI,yBAQvB3B,IAAMC,KAAK,qBAAsB,CACzCE,cAAeuB,gCALflC,KACEU,iBACAC,kBAMJL,KAAKO,eAAeH,GACpBJ,KAAKQ,gBAAgBH,aAEJgB,EAAKZ,yBAAtBkB,SACA3B,KAAKuB,aAAc,oBACZI,sCAEP3B,KAAKuB,aAAc,EACnBb,QAAQC,IAAI,yBAAZC,EAAAC,wJAKWP,GACbN,KAAK8B,eAAiBxB,EACtBJ,IAAM6B,SAASC,QAAf,cAA0ChC,KAAKiC,kBAC/CT,aAAaU,QAAQR,IAA0BpB,2CAIjCA,GACdN,KAAKmC,aAAe7B,EACpBkB,aAAaU,QAAQL,IAA2BvB,6CArDhD,gBAAA8B,OAAiBpC,KAAK8B,qEANvBlD,8EAA4B,kDAC5BA,8EAA0B,iDAC1BA,8EAAyB,kDAEzBwC,oHAKAvC,iHAwCAA,2HAOAA,oFAOYK,SAAOoB,MAAQ,IAAIgB,UCtDnBe,EAAA,2FAXbC,QAAU,gEAGRtC,KAAKjB,UAAW,iCAIhBiB,KAAKjB,UAAW,iDARjBH,8EAAsB,QCHzB2D,EAAAC,EAAAC,EAAA,sBAAArD,IAAAmD,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAApB,IAAAkB,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,EAAA,IAAAL,EAAAC,EAAAC,EAAA,sBAAAJ,IAqBEO,qCCrBFL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAf,IAAAa,EAAAC,EAAAC,EAAA,sBAAAZ,IAAO,IAAMgB,EAAW,iCACXnB,EAA2B,0BAC3BG,EAA4B,+CCDzCiB,EAAAC,QAAA,CAAkBC,UAAA,uBAAAC,OAAA,oBAAAC,QAAA,qBAAAC,IAAA,iBAAAC,IAAA,iOCGGC,mLAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOV,WAAvB,sBAH6BW,uKCsB7BC,EAAQC,IAAMC,KAClB,kBAAMC,QAAAC,IAAA,CAAAzB,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,KAAAC,KAAA3B,EAAA4B,KAAA,aAEFC,EAAYP,IAAMC,KACtB,kBAAMC,QAAAC,IAAA,CAAAzB,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,GAAA1B,EAAA0B,EAAA,KAAAC,KAAA3B,EAAA4B,KAAA,aAGRjE,IAAM6B,SAASsC,QAAUxB,IACzB3C,IAAM6B,SAASC,QAAf,OAAmC,mBACnC9B,IAAM6B,SAASC,QAAQ,gBAAkB,uBA0E1BsC,EAxEdC,kUAGSjE,IAAMkE,yJAKZ,GAAI7B,IAAe5D,SACjB,OACEuE,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOR,SACrBI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOe,UACrBnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAkBoB,MAAO,CAACC,MAAO,8CAQ3C,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOV,WACrBM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOT,SACvBK,EAAAC,EAAAC,cAACqB,EAAA,SAAD,CAAUC,SAAUxB,EAAAC,EAAAC,cAACuB,EAAD,OAClBzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAK,cAAcC,OAAQ,SAAAC,GAAK,OAAI/B,EAAAC,EAAAC,cAACI,EAAUyB,MACtD/B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAQ,SAAAC,GAAK,OAAI/B,EAAAC,EAAAC,cAACY,EAAciB,MAC3D/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,KAAK,aAAaC,GAAG,oBAC/BlC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,KAAK,IAAIC,GAAG,mBAK5BlC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDC,KAAMzG,IAASM,KAAKL,OACpByG,iBAAkB1G,IAASM,KAAKF,QAChCuG,QAAS3G,IAASM,KAAKJ,MACvB0G,QAAS,kBAAM5G,IAAS6G,QACxBC,UAAQ,WACRrH,OAAQ,CACNyE,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CACE6C,IAAI,QACJC,aAAW,QACXzB,MAAM,UACNtC,QAAStC,KAAKsG,eAEdhD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAW2C,UAAQ,4BAK3B5C,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOP,KACrBG,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEoB,MAAO,CAAC8B,QAASpE,IAAetD,SAAW,cAAgB,QAC3DuD,QAASD,IAAeC,QACxBsC,MAAM,UAAUyB,aAAW,MAC3B5C,UAAWC,IAAON,KAClBE,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,SAILvD,KAAK2G,+BAjEIhD,iBC1BZiD,EAAcC,QACW,cAA7B3H,OAAO4H,SAASC,UAEe,UAA7B7H,OAAO4H,SAASC,UAEhB7H,OAAO4H,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThD,KAAK,SAAAqD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBhI,QACf2H,UAAUC,cAAcO,YAI1BlH,QAAQC,IACN,gHAKEwG,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7G,QAAQC,IAAI,sCAGRwG,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAO5BQ,MAAM,SAAAC,GACLtH,QAAQsH,MAAM,4CAA6CA,oDCvF3DC,EAAWC,yBAAe,CAC9BC,QAAS,CACPC,QAASC,IACTC,UAAWC,KAEbC,WAAY,CACVC,iBAAiB,KAIfnE,mLAEF,OACEhB,EAAAC,EAAAC,cAACE,EAAA,iBAAD,CAAkBgF,MAAOT,GACvB3E,EAAAC,EAAAC,cAACmF,EAAD,cAJUhF,aAUlBiF,IAASxD,OAAO9B,EAAAC,EAAAC,cAACqF,EAAD,MAASC,SAASC,eAAe,QDP1C,SAAkB5B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI4B,IAAIC,GAAwB/J,OAAO4H,SAASoC,MACpDC,SAAWjK,OAAO4H,SAASqC,OAIvC,OAGFjK,OAAOkK,iBAAiB,OAAQ,WAC9B,IAAMlC,EAAK,GAAA9E,OAAM6G,GAAN,sBAEPrC,GAgEV,SAAiCM,EAAOC,GAEtCkC,MAAMnC,GACHhD,KAAK,SAAAoF,GAEJ,IAAMC,EAAcD,EAAStH,QAAQjB,IAAI,gBAEnB,MAApBuI,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CrC,UAAUC,cAAcqC,MAAMxF,KAAK,SAAAqD,GACjCA,EAAaoC,aAAazF,KAAK,WAC7BhF,OAAO4H,SAAS8C,aAKpB3C,EAAgBC,EAAOC,KAG1BY,MAAM,WACLrH,QAAQC,IACN,mEArFAkJ,CAAwB3C,EAAOC,GAI/BC,UAAUC,cAAcqC,MAAMxF,KAAK,WACjCxD,QAAQC,IACN,+GAMJsG,EAAgBC,EAAOC,MChB/BE,kJC9BMyC,qlBAmBA9J,KAAK+J,mBAAoB,WACM7J,IAAMa,IAAI,gCAA3BrB,IAARA,KAAQA,KAEdM,KAAKgK,QAAUtK,EACfM,KAAK+J,mBAAoB,oDAEzB/J,KAAK+J,mBAAoB,EACzBrJ,QAAQC,IAAI,+BAAZC,EAAAC,4LAKcoJ,2FAEdjK,KAAKkK,kBAAmB,WACOhK,IAAMa,IAAN,gBAAAqB,OAA0B6H,2BAA3CvK,IAARA,KAAQA,KACdM,KAAKkK,kBAAmB,EACxBlK,KAAK4C,OAASlD,oBAEPA,qCAEPM,KAAKkK,kBAAmB,EACxBxJ,QAAQC,IAAI,gCAAiCsJ,8LAK7BA,2FAEhBjK,KAAKmK,oBAAqB,WACIjK,IAAMa,IAAN,gBAAAqB,OAA0B6H,EAA1B,sCAAjBvK,IAAPA,KAAOA,KAEbM,KAAKoK,SAAW1K,EAChBM,KAAKmK,oBAAqB,oBACnBzK,qCAEPM,KAAKmK,oBAAqB,EAC1BzJ,QAAQC,IAAI,gCAAZQ,EAAAN,6LAKcoJ,EAAIvK,mFAElBM,KAAKqK,kBAAmB,WAClBnK,IAAMC,KAAN,gBAAAiC,OAA2B6H,EAA3B,cAA2CvK,iBACjDM,KAAKqK,kBAAmB,qBACjB,mCAEPrK,KAAKqK,kBAAmB,EACxB3J,QAAQC,IAAI,8BAAZ2J,EAAAzJ,iMAKiB0J,EAAUC,mFAE3BxK,KAAKyK,oBAAqB,WACpBvK,IAAMwK,OAAN,gBAAAtI,OAA6BmI,EAA7B,eAAAnI,OAAmDoI,kBACzDxK,KAAKyK,oBAAqB,qBACnB,mCAEPzK,KAAKyK,oBAAqB,EAC1B/J,QAAQC,IAAI,gCAAZgK,EAAA9J,yKAjFHjC,8EAA8B,oDAC9BA,8EAA+B,qDAC/BA,8EAAgC,mDAChCA,8EAA8B,qDAC9BA,8EAAgC,2CAChCA,6EAAsB,0CACtBA,8EAAoB,6CACpBA,6EAAqB,uCACrBA,6EAAiB,CAChB,CACEgM,KAAM,UACNC,IAAK,kEAIRhM,qHAcAA,sHAeAA,sHAeAA,uHAaAA,mFAcY4D,EAAA,MAAIqH","file":"static/js/main.adafa9e7.chunk.js","sourcesContent":["//MODULES\nimport { observable, action } from 'mobx'\n\n//STORE\nclass OverlayLoading {\n  @observable \n  isActive = false\n\n  @action\n  toggleisActive = () => {\n    this.isActive = !this.isActive\n  }\n\n  @action\n  show = () => {\n    this.isActive = true\n  }\n\n  @action\n  hide = () => {\n    this.isActive = false\n  }\n}\n\nexport default window.overlay = new OverlayLoading()","//MODULES\nimport { observable, action } from 'mobx'\n\n//STORE\nclass Snackbar {\n  @observable \n  data = {\n    active: false,\n    action: 'Dismiss',\n    label: 'Snackbar action cancel',\n    type: 'cancel',\n    timeout: 3000,\n  }\n\n  @action\n  show = (label, action, type, timeout) => {\n    let state = this.data\n\n    this.data = observable({\n      active: true,\n      action: action || state.action,\n      label: label || state.label,\n      type: type || state.type,\n      timeout: timeout || state.timeout\n    })\n  }\n\n  @action\n  hide = () => {\n    let state = this.data\n\n    this.data = observable({\n      ...state,\n      active: false,\n    })\n  }\n}\n\nexport default new Snackbar()","import { observable, computed, action } from 'mobx'\nimport axios from 'axios'\nimport snackbar from './snackbar';\nimport token from './token'\n\nclass User {\n  @observable data = null\n  @observable isLoading = false\n  @observable isFetchingUsers = false\n  @observable isLoadingLogin = false\n\n  @computed\n  get isLoggedIn() {\n    return !!this.data\n  }\n\n  @action\n  async login(email, password) {\n    try {\n      this.isLoadingLogin = true\n\n      let {\n        data: {\n          access_token,\n          refresh_token\n        }\n      } = await axios.post('/api/login', {\n        email, password\n      })\n      \n      token.setAccessToken(access_token)\n      token.setRefreshToken(refresh_token)\n      await this.getUser()\n      this.isLoadingLogin = false\n\n      return access_token\n    } catch(err) {\n      this.isLoadingLogin = false\n      console.log('ERROR WHILE LOGIN', err)\n    }\n  }\n\n  @action\n  async getUser() {\n    try {\n      this.isLoading = true\n      let { data } = await axios.get('/api/user/')\n      this.data = data\n      this.isLoading = false\n      console.log(data)\n      return data\n    } catch (err) {\n      this.isLoading = false\n      snackbar.show('Error fetching user')\n      console.log('ERROR WHILE FETCHING USERS', err)\n    }\n  }\n\n  @action\n  async getUsers() {\n    try {\n      this.isFetchingUsers = true\n      let { data: { data } } = await axios.get('/api/users')\n      this.isFetchingUsers = false\n      console.log(data)\n      return data\n    } catch (err) {\n      this.isFetchingUsers = false\n      snackbar.show('Error fetching user')\n      console.log('ERROR WHILE FETCHING USERS', err)\n    }\n  }\n}\n\nexport default window.user = new User()","import { observable, computed, action } from 'mobx'\nimport axios from 'axios'\nimport { ACCESS_TOKEN_STORAGE_URI, REFRESH_TOKEN_STORAGE_URI } from '../../config'\nimport user from './user'\n\nclass Token {\n  @observable rawAccessToken = null\n  @observable refreshToken = null\n  @observable isSettingUp = true\n\n  @computed\n  get bearerAccessToken() {\n    return `Bearer ${this.rawAccessToken}`\n  }\n\n  @action\n  async setup() {\n    this.isSettingUp = true \n    //get access token\n    let access_token = localStorage.getItem(ACCESS_TOKEN_STORAGE_URI)\n    if (!access_token) return this.isSettingUp = false\n    this.setAccessToken(access_token)\n    \n    //check if not expired\n    let userData = await user.getUser()\n    if (userData) {\n      this.isSettingUp = false\n      return userData\n    }\n\n    //if expired, refresh token\n    let refresh = localStorage.getItem(REFRESH_TOKEN_STORAGE_URI)\n    \n    try {\n      let {\n        data: {\n          access_token,\n          refresh_token,\n        }\n      } = await axios.post('/api/login/refresh', {\n        refresh_token: refresh\n      })\n\n      this.setAccessToken(access_token)\n      this.setRefreshToken(refresh_token)\n\n      userData = await user.getUser() \n      this.isSettingUp = false\n      return userData\n    } catch (err) {\n      this.isSettingUp = false\n      console.log('ERROR WHILE SETTING UP', err)\n    }\n  }\n\n  @action\n  setAccessToken(token) {\n    this.rawAccessToken = token\n    axios.defaults.headers['Authorization'] = this.bearerAccessToken\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_URI, token)\n  }\n\n  @action\n  setRefreshToken(token) {\n    this.refreshToken = token\n    localStorage.setItem(REFRESH_TOKEN_STORAGE_URI, token)\n  }\n}\n\nexport default window.token = new Token()","import { observable, action } from 'mobx'\n\nclass FloatingButton {\n  @observable isActive = false \n  onClick = () => {}\n\n  show() {\n    this.isActive = true\n  }\n\n  hide() {\n    this.isActive = false\n  }\n}\n\nexport default new FloatingButton()","import overlayLoading from './overlayLoading'\nimport snackbar from './snackbar'\nimport token from './token'\nimport user from './user'\nimport doctor from './doctor'\nimport floatingButton from './floatingButton'\n\nexport { \n  snackbar,\n  token,\n  user,\n  overlayLoading,\n  doctor,\n  floatingButton\n}\n\nexport default { \n  snackbar,\n  token,\n  user,\n  overlayLoading,\n  doctor,\n  floatingButton,\n}","export const BASE_URL = 'https://dentalcare.dhimas.tech'\nexport const ACCESS_TOKEN_STORAGE_URI = 'access_token_dentalcare'\nexport const REFRESH_TOKEN_STORAGE_URI = 'refresh_token_dentalcare'","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1T8d6\",\"shadow\":\"App_shadow__2hWrF\",\"loading\":\"App_loading__2BSGx\",\"add\":\"App_add__30Lqh\",\"fab\":\"App_fab__BmiZW\"};","import React, { Component } from 'react'\n\nimport styles from './css/index-loading.scss'\n\nexport default class index extends Component {\n  render() {\n    return (\n      <div className={styles.container} >\n        Loading ...\n      </div>\n    )\n  }\n}\n","import React, { Component, Suspense } from 'react'\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport LoadingPage from './screens/Loading'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport styles from './App.module.scss'\nimport axios from 'axios'\nimport Fab from '@material-ui/core/Fab'\nimport AddIcon from '@material-ui/icons/Add'\nimport { BASE_URL } from './config'\n// import user from './services/stores/user'\nimport { \n  // Button, \n  // Dialog, \n  // DialogTitle, \n  // DialogContent, \n  // DialogContentText, \n  // DialogActions,\n  Snackbar,\n  // CircularProgress \n} from '@material-ui/core'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { snackbar, token, overlayLoading, floatingButton } from './services/stores'\nimport { observer } from 'mobx-react'\n\nconst Login = React.lazy(\n  () => import(/*webpackChunkName: \"Login\"*/ './screens/Auth/Login')\n)\nconst Dashboard = React.lazy(\n  () => import(/*webpackChunkName: \"Dashboard\"*/ './screens/Dashboard')\n)\n\naxios.defaults.baseURL = BASE_URL\naxios.defaults.headers['Accept'] = 'application/json'\naxios.defaults.headers['Content-Type'] = 'application/json'\n\n@observer\nclass App extends Component {\n  async componentDidMount() {\n    await token.setup()\n    // snackbar.show('abc')\n  }\n\n  renderOverlayLoading() {\n    if (overlayLoading.isActive)\n      return (\n        <section>\n          <div className={styles.loading}>\n            <div className={styles.loading2}>\n              <CircularProgress style={{color: '#fff'}} />\n            </div>\n          </div>\n        </section>\n      )\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.shadow} />\n        <Suspense fallback={<LoadingPage />} >\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/auth/login\" render={props => <Login {...props} />} />\n              <Route path=\"/dashboard/*\" render={props => <Dashboard {...props} />} />\n              <Redirect from=\"/dashboard\" to=\"/dashboard/home\" />\n              <Redirect from=\"/\" to=\"/auth/login\" />\n            </Switch>\n          </BrowserRouter>\n        </Suspense>\n\n        <section>\n          <Snackbar\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center'}}\n            open={snackbar.data.active}\n            autoHideDuration={snackbar.data.timeout}\n            message={snackbar.data.label}\n            onClose={() => snackbar.hide()}\n            data-cy=\"snackbar\"\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                onClick={this.closeSnackbar}\n              >\n                <CloseIcon data-cy=\"snackbar-close-btn\" />\n              </IconButton>,\n            ]}\n          />\n        </section>\n        <section>\n          <div className={styles.add} >\n            <Fab \n              style={{display: floatingButton.isActive ? 'inline-flex' : 'none'}}\n              onClick={floatingButton.onClick}\n              color=\"primary\" aria-label=\"Add\" \n              className={styles.fab}>\n              <AddIcon />\n            </Fab>\n          </div>\n        </section>\n        {this.renderOverlayLoading()}\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Router from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\nimport lightBlue from '@material-ui/core/colors/lightBlue'\n\nconst MUITheme = createMuiTheme({\n  palette: {\n    primary: lightBlue,\n    secondary: red,\n  },\n  typography: {\n    useNextVariants: true,\n  }\n})\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={MUITheme}>\n        <Router />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('app'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n","// import { observer } from 'mobx-react'\nimport { observable, action } from 'mobx'\nimport axios from 'axios'\n\nclass Doctor {\n  @observable isFetchingDoctor = false\n  @observable isFetchingDoctors = false\n  @observable isFetchingSchedule = false\n  @observable isAddingSchedule = false\n  @observable isDeletingSchedule = false\n  @observable schedule = []\n  @observable doctor = null\n  @observable doctors = []\n  @observable nav = [\n    {\n      name: 'Doctors',\n      url: '/dashboard/doctors'\n    }\n  ]\n  \n  @action\n  async fetchDoctors() {\n    try {\n      this.isFetchingDoctors = true\n      let { data: { data } } = await axios.get('/api/doctors')\n      // console.log(data)\n      this.doctors = data\n      this.isFetchingDoctors = false\n    } catch (err) {\n      this.isFetchingDoctors = false\n      console.log('ERROR WHILE FETCHING DOCTORS', err)\n    }\n  }\n\n  @action\n  async fetchDoctor(id) {\n    try {\n      this.isFetchingDoctor = true\n      let { data: { data } } = await axios.get(`/api/doctors/${id}`)\n      this.isFetchingDoctor = false\n      this.doctor = data\n      // console.log('DOCTOR', data)\n      return data\n    } catch (err) {\n      this.isFetchingDoctor = false\n      console.log('Error fetching doctor with id', id)\n    }\n  }\n\n  @action\n  async fetchSchedule(id) {\n    try {\n      this.isFetchingSchedule = true\n      let { data: {data } } = await axios.get(`/api/doctors/${id}/schedules`)\n\n      this.schedule = data\n      this.isFetchingSchedule = false\n      return data\n    } catch (err) {\n      this.isFetchingSchedule = false\n      console.log('ERROR WHILE FETCHING SCHEDULE', err)\n    }\n  }\n\n  @action\n  async addSchedule(id, data) {\n    try {\n      this.isAddingSchedule = true\n      await axios.post(`/api/doctors/${id}/schedules`, data)\n      this.isAddingSchedule = false\n      return true\n    } catch (err) {\n      this.isAddingSchedule = false\n      console.log('ERROR WHILE ADDING SCHEDULE', err)\n    }\n  }\n\n  @action\n  async deleteSchedule(doctorId, scheduleId) {\n    try {\n      this.isDeletingSchedule = true\n      await axios.delete(`/api/doctors/${doctorId}/schedules/${scheduleId}`)\n      this.isDeletingSchedule = false\n      return true\n    } catch (err) {\n      this.isDeletingSchedule = false\n      console.log('ERROR WHILE DELETING SCHEDULE', err)\n    }\n  }\n}\n\nexport default new Doctor()"],"sourceRoot":""}